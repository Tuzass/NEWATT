#include "Piece.hpp"

namespace Pieces{
    // binary representations of orientations if needed
    // extern const uint64_t I_ORIENTATIONS;
    // extern const uint64_t O_ORIENTATIONS;
    // extern const uint64_t T_ORIENTATIONS;
    // extern const uint64_t L_ORIENTATIONS;
    // extern const uint64_t J_ORIENTATIONS;
    // extern const uint64_t S_ORIENTATIONS;
    // extern const uint64_t Z_ORIENTATIONS;

    extern int I_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int I_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int I_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int I_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int O_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int O_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int O_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int O_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int T_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int T_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int T_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int T_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int L_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int L_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int L_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int L_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int J_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int J_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int J_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int J_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int S_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int S_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int S_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int S_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int Z_ORIENTATION_COORDINATES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int Z_LEFTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int Z_RIGHTMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];
    extern int Z_DOWNMOST_COLLISION_COORDINATE_INDICES[Piece::ORIENTATIONS * Piece::COORDINATES];

    extern int I_WALL_KICK_OFFSETS[Piece::ORIENTATIONS * Piece::DIMENSIONS * Piece::OFFSETS];
    extern int TLJSZ_WALL_KICK_OFFSETS[Piece::ORIENTATIONS * Piece::DIMENSIONS * Piece::OFFSETS];
}
